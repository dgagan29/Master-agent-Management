{"ast":null,"code":"var _jsxFileName = \"/Users/gagg/Desktop/Master-agent-management/frontend/src/components/Demo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/Demo.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Demo = () => {\n  _s();\n  const {\n    agentId\n  } = useParams();\n  const [agent, setAgent] = useState(null);\n  const [hrNotes, setHrNotes] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n  useEffect(() => {\n    const fetchAgent = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/agents/${agentId}`);\n        setAgent(response.data);\n      } catch (error) {\n        console.error('Error fetching agent data:', error);\n      }\n    };\n    fetchAgent();\n  }, [agentId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const jobData = {\n        agentId,\n        hrNotes,\n        jobDescription\n      };\n      await axios.post('http://localhost:5001/api/jobs', jobData);\n      setHrNotes('');\n      setJobDescription('');\n      alert('Job data submitted successfully');\n    } catch (error) {\n      console.error('Error submitting job data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-3\",\n    children: agent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this), \" \", agent.Category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Agent ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 14\n        }, this), \" \", agent.AgentID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Demo for Agent: \", agent.Role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: agent.DemoContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hrNotes\",\n            children: \"HR Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"hrNotes\",\n            className: \"form-control\",\n            value: hrNotes,\n            onChange: e => setHrNotes(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"jobDescription\",\n            children: \"Job Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"jobDescription\",\n            className: \"form-control\",\n            value: jobDescription,\n            onChange: e => setJobDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Demo, \"KkYg39w1N0jUCWSF3l0AtfWkgrA=\", false, function () {\n  return [useParams];\n});\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Demo","_s","agentId","agent","setAgent","hrNotes","setHrNotes","jobDescription","setJobDescription","fetchAgent","response","get","data","error","console","handleSubmit","e","preventDefault","jobData","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Category","AgentID","Role","DemoContent","onSubmit","htmlFor","id","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/gagg/Desktop/Master-agent-management/frontend/src/components/Demo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport '../styles/Demo.css';\n\nconst Demo = () => {\n  const { agentId } = useParams();\n  const [agent, setAgent] = useState(null);\n  const [hrNotes, setHrNotes] = useState('');\n  const [jobDescription, setJobDescription] = useState('');\n\n  useEffect(() => {\n    const fetchAgent = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/agents/${agentId}`);\n        setAgent(response.data);\n      } catch (error) {\n        console.error('Error fetching agent data:', error);\n      }\n    };\n\n    fetchAgent();\n  }, [agentId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const jobData = {\n        agentId,\n        hrNotes,\n        jobDescription,\n      };\n      await axios.post('http://localhost:5001/api/jobs', jobData);\n      setHrNotes('');\n      setJobDescription('');\n      alert('Job data submitted successfully');\n    } catch (error) {\n      console.error('Error submitting job data:', error);\n    }\n  };\n\n  return (\n    <div className=\"container mt-3\">\n      {agent ? (\n        <>\n          <p><strong>Category:</strong> {agent.Category}</p>\n          <p><strong>Agent ID:</strong> {agent.AgentID}</p>\n          <h2>Demo for Agent: {agent.Role}</h2>\n          <p>{agent.DemoContent}</p> {/* Assuming you have DemoContent field */}\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"hrNotes\">HR Notes</label>\n              <textarea\n                id=\"hrNotes\"\n                className=\"form-control\"\n                value={hrNotes}\n                onChange={(e) => setHrNotes(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"jobDescription\">Job Description</label>\n              <textarea\n                id=\"jobDescription\"\n                className=\"form-control\"\n                value={jobDescription}\n                onChange={(e) => setJobDescription(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n          </form>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Demo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}